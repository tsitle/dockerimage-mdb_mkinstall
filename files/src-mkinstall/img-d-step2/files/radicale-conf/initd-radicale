#!/bin/sh

### BEGIN INIT INFO
# Provides:          radicaledaemon
# Required-Start:    $local_fs $network $syslog
# Required-Stop:     $local_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Radicale CalDAV and CardDAV Server
# Description:       Radicale start-stop-daemon - Debian
### END INIT INFO

NAME="radicale"
PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin"
APPDIR="/"
APPBIN="/usr/bin/python3"
APPARGS="-m radicale --config /etc/radicale/config"
USER="radicale"
GROUP="radicale"

SERVICE_DESC="Radicale Cal-/CardDAV Server"

# Include functions 
set -e
. /lib/lsb/init-functions

start() {
	[ -f /var/run/$NAME.pid -a -n `cat /var/run/$NAME.pid 2>/dev/null` ] && {
		test -d /proc/$(cat /var/run/$NAME.pid) && {
			printf "Service '$NAME' already running.\n"
			exit 1
		}
		rm /var/run/$NAME.pid
	}
	printf "Starting $SERVICE_DESC: $NAME"
	start-stop-daemon --start --chuid "$USER:$GROUP" --background --make-pidfile --pidfile /var/run/$NAME.pid --chdir "$APPDIR" --exec "$APPBIN" -- $APPARGS || true
	printf ".\n"
}

# We need this function to ensure the whole process tree will be killed
killtree() {
	local _pid=$1
	local _sig=${2-TERM}
	for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
		killtree ${_child} ${_sig}
	done
	kill -${_sig} ${_pid}
}

stop() {
	if [ -f /var/run/$NAME.pid -a -n `cat /var/run/$NAME.pid 2>/dev/null` ]; then
		printf "Stopping $SERVICE_DESC: $NAME"
		test -d /proc/$(cat /var/run/$NAME.pid) &&
			kill -s 15 $(cat /var/run/$NAME.pid)
		rm /var/run/$NAME.pid

		#while test -d /proc/$(cat /var/run/$NAME.pid); do
		#	killtree $(cat /var/run/$NAME.pid) 15
		#	sleep 0.5
		#done

		printf ".\n"
	else
		printf "Service $NAME not running.\n"
	fi
}

status() {
	[ -f /var/run/$NAME.pid -a -n `cat /var/run/$NAME.pid 2>/dev/null` ] && {
		status_of_proc -p /var/run/$NAME.pid "radicale" $NAME && exit 0 || exit $?
	} || {
		printf "Service $NAME not running.\n"
	}
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		start
		;;
	status)
		status
		;;
	*)
		echo "Usage: $NAME {start|stop|restart|status}" >&2
		exit 1
		;;
esac

exit 0
